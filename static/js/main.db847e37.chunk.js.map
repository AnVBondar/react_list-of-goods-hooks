{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","sortMethod","setSortMethod","reverseMethod","setreverseMethod","visibleGoods","goods","sortedGoods","alphabet","sort","good1","good2","localeCompare","reverse","length","getSortedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,4EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,oBAAAA,E,gBAAAA,E,mBAAAA,M,KAoDE,IAAME,EAAgB,WAC3B,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA0CF,mBAAS,IAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KACMC,EA5CR,SACEC,EADF,GAMG,IAHCL,EAGF,EAHEA,WACAE,EAEF,EAFEA,cAGII,EAAW,YAAOD,GAExB,OAAIH,GAAiBF,IAAeJ,EAASW,SACpCD,EACJE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MAC3CE,UAGDV,GAAiBF,IAAeJ,EAASiB,OACpCP,EACJE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMI,OAASH,EAAMG,UAC5CD,UAGDV,EACKI,EAAYM,WAGjBZ,GACFM,EAAYE,MAAK,SAACC,EAAOC,GACvB,OAAQV,GACN,KAAKJ,EAASW,SACZ,OAAOE,EAAME,cAAcD,GAC7B,KAAKd,EAASiB,OACZ,OAAOJ,EAAMI,OAASH,EAAMG,OAC9B,QACE,OAAO,MAKRP,GAMcQ,CACnBjB,EACA,CACEG,aACAE,kBAIJ,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYjB,IAAeJ,EAASW,WAExCW,QAAS,kBAAMjB,EAAcL,EAASW,WAPxC,iCAYA,wBACES,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYjB,IAAeJ,EAASiB,SAExCK,QAAS,kBAAMjB,EAAcL,EAASiB,SAPxC,4BAYCX,EACC,wBACEc,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYf,IAAkBN,EAASgB,UAE3CM,QAAS,kBAAMf,EAAiB,KAPlC,qBAYA,wBACEa,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYf,IAAkBN,EAASgB,UAE3CM,QAAS,kBAAMf,EAAiBP,EAASgB,UAP3C,sBAaAZ,GAAcE,IACd,wBACEc,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPjB,EAAc,IACdE,EAAiB,KALrB,sBAaHC,EAAae,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,UClJhCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.db847e37.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport cn from 'classnames';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  alphabet = 'alphabet',\n  length = 'length',\n  reverse = 'reverse',\n}\n\ninterface FilterParams {\n  sortMethod: string | '';\n  reverseMethod: string;\n}\n\nfunction getSortedGoods(\n  goods: string[],\n  {\n    sortMethod,\n    reverseMethod,\n  }: FilterParams,\n) {\n  const sortedGoods = [...goods];\n\n  if (reverseMethod && sortMethod === SortType.alphabet) {\n    return sortedGoods\n      .sort((good1, good2) => good1.localeCompare(good2))\n      .reverse();\n  }\n\n  if (reverseMethod && sortMethod === SortType.length) {\n    return sortedGoods\n      .sort((good1, good2) => good1.length - good2.length)\n      .reverse();\n  }\n\n  if (reverseMethod) {\n    return sortedGoods.reverse();\n  }\n\n  if (sortMethod) {\n    sortedGoods.sort((good1, good2) => {\n      switch (sortMethod) {\n        case SortType.alphabet:\n          return good1.localeCompare(good2);\n        case SortType.length:\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  return sortedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortMethod, setSortMethod] = useState('');\n  const [reverseMethod, setreverseMethod] = useState('');\n  const visibleGoods = getSortedGoods(\n    goodsFromServer,\n    {\n      sortMethod,\n      reverseMethod,\n    },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': sortMethod !== SortType.alphabet },\n          )}\n          onClick={() => setSortMethod(SortType.alphabet)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            { 'is-light': sortMethod !== SortType.length },\n          )}\n          onClick={() => setSortMethod(SortType.length)}\n        >\n          Sort by length\n        </button>\n\n        {reverseMethod ? (\n          <button\n            type=\"button\"\n            className={cn(\n              'button',\n              'is-warning',\n              { 'is-light': reverseMethod !== SortType.reverse },\n            )}\n            onClick={() => setreverseMethod('')}\n          >\n            Reverse\n          </button>\n        ) : (\n          <button\n            type=\"button\"\n            className={cn(\n              'button',\n              'is-warning',\n              { 'is-light': reverseMethod !== SortType.reverse },\n            )}\n            onClick={() => setreverseMethod(SortType.reverse)}\n          >\n            Reverse\n          </button>\n        )}\n\n        {(sortMethod || reverseMethod) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortMethod('');\n              setreverseMethod('');\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      {visibleGoods.map(good => (\n        <li data-cy=\"Good\" key={good}>{good}</li>\n      ))}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}